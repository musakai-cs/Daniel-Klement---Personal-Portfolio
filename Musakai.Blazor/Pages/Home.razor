@using Musakai.Blazor.Components.Cards
@using Musakai.Blazor.Components.Images.ImageSlider
@using System.ComponentModel.DataAnnotations
@using Musakai.Shared.Api.V1.Contact.Requests

@inject Musakai.Interfaces.Blazor.ApiServices.IApiContactService ApiContactService

@page "/"

<PageTitle>Daniel Klement</PageTitle>

<section id="presentation">
    <ImageSlider Title="Daniel Klement" Description="C#/.NET vývojář a fotograf" Slides="_slides" />
</section>
<section id="about-me">
    <h2>O mně</h2>
    <Image Src="your-photo.jpg" Alt="Vaše fotka" Title="" Width="50px" Height="50px" Loading="Enums.Loading.ImageLoading.Auto" SrcSet="" Sizes="" />

    <p>Ahoj, jsem Daniel, vášnivý <strong>foitograf</strong> a <strong>C#/.NET vývojář</strong>... (About me se musi doresit postupne pozdeji, az se bude dodelavat web, ted se dodava pouze HTML)</p>

    <div class="fun-facts">
        <h3>Zajímavosti</h3>
        <ul>
            <li>Vyvinul jsem [zmínka o pozoruhodném projektu].</li>
            <li>Fotografování mě zavedlo do [zmínka o zajímavých místech].</li>
        </ul>
    </div>
    <div class="cta">
        <p>Pojďme společně vytvořit něco krásného. <a href="#contact">Kontaktujte mě!</a></p>
    </div>
</section>
<section id="portfolio">
    <h2>Portfolio</h2>
    <PortfolioCard Src="" Title="Sport" />
    <PortfolioCard Src="" Title="Příroda" />
    <PortfolioCard Src="" Title="Portréty" />
    <PortfolioCard Src="" Title="Street Fotografie" />
    <PortfolioCard Src="" Title="Svatby" />
</section>
<section id="contact">
    <div class="contact-info">
        <h2>Lorem ipsum</h2>
        <p><strong>Email:</strong> lorem@ipsum.com</p>
        <p><strong>Phone:</strong> +123 456 7890</p>
        <p><strong>Address:</strong> 123 Lorem Ipsum, Dolor, Sit</p>
    </div>
    <div class="contact-form">
        <h2>Lorem ipsum</h2>
        <EditForm Model="@contactModel" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="firstName">Jméno</label>
                <InputText id="firstName" class="form-control" @bind-Value="contactModel.Name" />
                <ValidationMessage For="@(() => contactModel.Name)" />
            </div>
            <div class="form-group">
                <label for="lastName">Příjmení</label>
                <InputText id="lastName" class="form-control" @bind-Value="contactModel.Surname" />
                <ValidationMessage For="@(() => contactModel.Surname)" />
            </div>
            <div class="form-group">
                <label for="email">E-mailová adresa</label>
                <InputText id="email" class="form-control" @bind-Value="contactModel.Email" />
                <ValidationMessage For="@(() => contactModel.Email)" />
            </div>
            <div class="form-group">
                <label for="phone">Telefonní číslo</label>
                <InputText id="phone" class="form-control" @bind-Value="contactModel.Phone" />
                <ValidationMessage For="@(() => contactModel.Phone)" />
            </div>
            <div class="form-group">
                <label for="message">Zpráva</label>
                <InputTextArea id="message" class="form-control" @bind-Value="contactModel.Message" />
                <ValidationMessage For="@(() => contactModel.Message)" />
            </div>
            <button type="submit" class="btn btn-primary">Odeslat</button>
        </EditForm>
    </div>
</section>


@code {
    // TODO (#15): Replace link with Button. Need to create a Button components.
    // This issue is tracked on GitHub: https://github.com/musakai/Daniel-Klement---Personal-Portfolio/issues/15

    private List<ImageSliderContent> _slides = new List<ImageSliderContent>
    {
        new ImageSliderContent { Src = "image1.jpg"},
        new ImageSliderContent { Src = "image2.jpg"},
        new ImageSliderContent { Src = "image3.jpg"}
    };

    private ContactRequest contactModel = new();

    // TODO (#20): Handle exceptions and Messages (Error / Success)
    // This issue is tracked on GitHub: https://github.com/musakai/Daniel-Klement---Personal-Portfolio/issues/20
    private async Task HandleValidSubmit()
    {
        try
        {
            await ApiContactService.SendContactMessage(contactModel);
            // Display Success Notification
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            // Display Error notification
        }
    }
}
